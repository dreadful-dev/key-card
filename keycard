#!/bin/bash


if [ -t 1 ] && [ -n "$(tput colors 2>/dev/null)" ] && [ "$(tput colors)" -ge 8 ]; then
    KEYCARD_COLOR_RED='\033[0;31m'
    KEYCARD_COLOR_GREEN='\033[0;32m'
    KEYCARD_COLOR_YELLOW='\033[0;33m'
    KEYCARD_COLOR_BLUE='\033[0;34m'
    KEYCARD_COLOR_MAGENTA='\033[0;35m'
    KEYCARD_COLOR_CYAN='\033[0;36m'
    KEYCARD_COLOR_RESET='\033[0m'
else
    KEYCARD_COLOR_RED=''
    KEYCARD_COLOR_GREEN=''
    KEYCARD_COLOR_YELLOW=''
    KEYCARD_COLOR_BLUE=''
    KEYCARD_COLOR_MAGENTA=''
    KEYCARD_COLOR_CYAN=''
    KEYCARD_COLOR_RESET=''
fi

import_implementation() {
  local script_dir="$1"
  if [[ -z "$script_dir" ]]; then
    echo "Error: script_dir is not set"
    exit 1
  fi
  
  # The following line of code is used to remove any trailing slash from the script_dir variable.
  # The "%" operator is a parameter expansion in bash. It is used to remove a trailing substring from a string.
  # In this case, the substring is "/", so any trailing slash from the script_dir variable will be removed.
  script_dir="${script_dir%/}"
  
  for file in $(find "${script_dir}" -type f); do
    if [[ -f "$file" ]]; then
      source "$file"
    else
      echo "Error: Cannot find $file"
      return 1
    fi
  done
}

import_modules() {
  
  local OS=""
  
  if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux
    if [ -f /etc/os-release ]; then
      . /etc/os-release
      case $ID in
        debian)
          OS="debian"
          ;;
        ubuntu)
          OS="ubuntu"
          ;;
        # fedora)
        #   OS="fedora"
        #   ;;
        # centos)
        #   OS="centos"
        #   ;;
        *)
          OS=$ID
          ;;
      esac
    fi
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    # Mac OSX
    OS="osx"
    echo "${KEYCARD_COLOR_YELLOW}Warning: OSX is support is under development${KEYCARD_COLOR_RESET}"
  # elif [[ "$OSTYPE" == "cygwin" ]]; then
  #   # POSIX compatibility layer and Linux environment emulation for Windows
  #   OS="windows/cygwin"
  # elif [[ "$OSTYPE" == "msys" ]]; then
  #   # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
  #   OS="windows/msys"
  # elif [[ "$OSTYPE" == "win32" ]]; then
  #   OS="windows"
  # elif [[ "$OSTYPE" == "freebsd"* ]]; then
  #   # FreeBSD
  #   OS="freebsd"
  else
    # Unknown.
    echo "${KEYCARD_COLOR_RED}Error: Unknown OS: $OSTYPE ${KEYCARD_COLOR_RESET}"
    exit 1
  fi
  
  local module_dir="$(dirname "${BASH_SOURCE[0]}")/src" 
  local implementation_dir="${module_dir}/${OS}"
  import_implementation $implementation_dir
}

import_modules

keycard() {
  local command=$1
  shift
  case $command in
    install)
      install_deps "$@"
      ;;
    swap)
      swap "$@"
      ;;
    backup)
      backup_private_keys "$@"
      ;;
    export)
      export_public_keys "$@"
      ;;
    setup)
      gpg_key_setup "$@"
      ;;
    touch)
      touch "$@"
      ;;
    mount)
      mount_key_export "$@"
      ;;
    unmount)
      unmount_key_export "$@"
      ;;
    help)
      echo "Valid commands are: install, backup, export, setup, mount, help"
      ;;
    *)
      echo "${KEYCARD_COLOR_YELLOW}Invalid command: $command ${KEYCARD_COLOR_RESET}"
      echo "Valid commands are: install, backup, export, setup, mount, help"
      return 1
      ;;
  esac
}